kibana:

  ## Uncomment the following block to use an ingress
  # ingress:
  #  enabled: true
  #  annotations:
  #    cert-manager.io/cluster-issuer: letsencrypt-prod # Remove this annotation if not using cert-manager
  #  hosts:
  #  - opni-kibana.danbason.dev
  #  tls:
  #  - secretName: opni-kibana-external-ssl
  #    hosts:
  #    - opni-kibana.danbason.dev

  ## Uncomment the following block to use a LoadBalancers service
  # service:
  #  type: LoadBalancer

elasticsearch:
  master:
    resources:
      limits:
        memory: 1Gi
      requests:
        memory: 1Gi
  data:
    replicas: 2
    persistence:
      size: 25Gi
    javaOpts: "-Xms2g -Xmx2g"
    resources:
      limits:
        memory: 4Gi
      requests:
        memory: 4Gi
  client:
    resources:
      limits:
        memory: 1Gi
      requests:
        memory: 1Gi

    ## Uncomment the following block to use an ingress
    # ingress:
    #  enabled: true
    #  annotations:
    #    cert-manager.io/cluster-issuer: letsencrypt-prod # Remove this annotation if not using cert-manager
    #    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    #  hosts:
    #  - <elasticsearch.hostname>
    #  tls:
    #  - secretName: opni-elastic-external-ssl
    #    hosts:
    #    - <elasticsearch.hostname>

    ## Uncomment the following block to use a LoadBalancer service
    # service:
    #  type: LoadBalancer